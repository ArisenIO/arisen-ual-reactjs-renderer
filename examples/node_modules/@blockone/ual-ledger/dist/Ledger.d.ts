import { Authenticator, ButtonStyle, Chain, UALError, User } from '@blockone/universal-authenticator-library';
import { LedgerOptions } from './interfaces';
export declare class Ledger extends Authenticator {
    private onBoardingLink;
    private users;
    chains: Chain[];
    options?: LedgerOptions;
    constructor(chains: Chain[], options?: LedgerOptions);
    init(): Promise<void>;
    shouldRender(): boolean;
    shouldAutoLogin(): boolean;
    shouldRequestAccountName(): Promise<boolean>;
    login(accountName?: string): Promise<User[]>;
    logout(): Promise<void>;
    getStyle(): ButtonStyle;
    isLoading(): boolean;
    isErrored(): boolean;
    getError(): UALError | null;
    getOnboardingLink(): string;
    reset(): void;
    requiresGetKeyConfirmation(accountName?: string): boolean;
}
